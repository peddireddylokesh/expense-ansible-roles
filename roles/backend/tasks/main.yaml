- name: disable current nodejs
  ansible.builtin.command: dnf module disable nodejs -y

- name: enable Node.js 20 module
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs
  ansible.builtin.package: 
    name: "{{ item }}"
    state: present
  loop: 
  - nodejs
  - mysql
  
- name:  install mysql libraries PyMySQL 3.9
  ansible.builtin.pip:
    name: "{{ item }}"
    executable: pip3.9
  loop: 
  - cryptography
  - PyMySQL

- name: add expense user
  ansible.builtin.user:
    name: expense

- name: inclue from common roles
  tags:
  - deployment
  include_role: 
    name: common
    tasks_from: main

# - name: create app directory
#   ansible.builtin.file:
#     path: /app
#     state: directory
#     mode: '0755'

# - name: download backend code
#   ansible.builtin.get_url:
#     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
#     dest: /tmp/backend.zip

# - name: Extract app directory into /app
#   ansible.builtin.unarchive:
#     src: /tmp/backend.zip
#     dest: /app
#     remote_src: yes

- name: install dependencies
  tags:
  - deployment
  community.general.npm:
    path: /app

- name: copy backend service
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: import mysql data
  community.mysql.mysql_db:
    login_host: "{{ MYSQL_HOST }}"
    login_user: "{{ MYSQL_USER }}"
    login_password: "{{ MYSQL_PASS }}"
    state: import 
    name: all
    target: /app/schema/backend.sql

- name: demon Reload and restarting service
  tags:
  - deployment
  ansible.builtin.systemd_service:
    enabled: true 
    state: restarted
    daemon_reload: true
    name: backend
